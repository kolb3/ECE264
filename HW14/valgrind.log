==31342== Memcheck, a memory error detector
==31342== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==31342== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==31342== Command: ./hw14
==31342== Parent PID: 31341
==31342== 
--31342-- 
--31342-- Valgrind options:
--31342--    --tool=memcheck
--31342--    --verbose
--31342--    --log-file=./valgrind.log
--31342-- Contents of /proc/version:
--31342--   Linux version 2.6.32-754.3.5.el6.x86_64 (mockbuild@x86-042.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-23) (GCC) ) #1 SMP Thu Aug 9 11:56:22 EDT 2018
--31342-- Arch and hwcaps: AMD64, amd64-sse3-cx16-lzcnt-avx2-bmi
--31342-- Page sizes: currently 4096, max supported 4096
--31342-- Valgrind library directory: /usr/lib64/valgrind
--31342-- Reading syms from /home/shay/a/kolb3/ECE264/solutions/2018FallProblems/HW14/hw14
--31342-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--31342--    object doesn't have a dynamic symbol table
--31342-- Reading syms from /lib64/ld-2.12.so
--31342--   Considering /usr/lib/debug/.build-id/1c/c2165e019d43f71fde0a47af9f4c8eb5e51963.debug ..
--31342--   .. build-id is valid
--31342-- Scheduler: using generic scheduler lock implementation.
--31342-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==31342== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-31342-by-kolb3-on-ecegrid-thin6.ecn.purdue.edu
==31342== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-31342-by-kolb3-on-ecegrid-thin6.ecn.purdue.edu
==31342== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-31342-by-kolb3-on-ecegrid-thin6.ecn.purdue.edu
==31342== 
==31342== TO CONTROL THIS PROCESS USING vgdb (which you probably
==31342== don't want to do, unless you know exactly what you're doing,
==31342== or are doing some strange experiment):
==31342==   /usr/lib64/valgrind/../../bin/vgdb --pid=31342 ...command...
==31342== 
==31342== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==31342==   /path/to/gdb ./hw14
==31342== and then give GDB the following command
==31342==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=31342
==31342== --pid is optional if only one valgrind process is running
==31342== 
--31342-- REDIR: 0x39dde17f90 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--31342-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--31342-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--31342-- REDIR: 0x39dde17da0 (index) redirected to 0x4a07c30 (index)
--31342-- REDIR: 0x39dde17e20 (strcmp) redirected to 0x4a08570 (strcmp)
--31342-- Reading syms from /lib64/libc-2.12.so
--31342--   Considering /usr/lib/debug/.build-id/8e/3aace76351b6a83390ca065e904eb82fbd1ec7.debug ..
--31342--   .. build-id is valid
--31342-- REDIR: 0x39de284d10 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31342-- REDIR: 0x39de286fd0 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--31342-- REDIR: 0x39de282c80 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--31342-- REDIR: 0x39de27b8b0 (free) redirected to 0x4a063a9 (free)
==31342== 
==31342== HEAP SUMMARY:
==31342==     in use at exit: 0 bytes in 0 blocks
==31342==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==31342== 
==31342== All heap blocks were freed -- no leaks are possible
==31342== 
==31342== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)
--31342-- 
--31342-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--31342-- used_suppression:      4 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==31342== 
==31342== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8 from 6)
